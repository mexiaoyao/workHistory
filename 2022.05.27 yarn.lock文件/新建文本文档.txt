今天在项目中遇到了一个yarn.lock文件想搞清楚这yarn.lock的文件作用，所以就学习了一下yarn。
这里写图片描述

Yarn是一个快速可靠安全的依赖管理工具。
主要的三个特点：

    极其快速，Yarn会缓存它下载的每个包，所以无需重复下载。它还能并行化操作以最大化资源利用率。
    特别安全，Yarn会在每个安装包被执行前校验其完整性
    超级可靠， Yarn使用格式详尽而又简洁的lockfile文件和确定性算法来安装依赖，能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上

关于yarn.lock文件，官网的解释如下：

    Managed by Yarn
    Your yarn.lock file is auto-generated and should be handled entirely by Yarn. As you add/upgrade/remove dependencies with the Yarn CLI, it will automatically update your yarn.lock file. Do not edit this file directly as it is easy to break something.

    Current package only
    During install Yarn will only use the top-level yarn.lock file and will ignore any yarn.lock files that exist within dependencies. The top-level yarn.lock file includes everything Yarn needs to lock the versions of all packages in the entire dependency tree.

翻译如下：

    由Yarn管理
    您的yarn.lock文件是自动生成的，也完全Yarn来处理。当你使用Yarn CLI添加/升级/删除 依赖项的时，它将自动更新到您的yarn.lock文件。不要直接编辑这个文件，因为很容易破坏某些东西。
    仅限当前包
    在安装期间，Yarn将仅使用顶级yarn.lock文件，并将忽略依赖项中存在的任何yarn.lock文件。顶级yarn.lock文件包含Yarn需要锁定整个依赖关系树中所有包的版本的所有内容。

yarn.lock的具体的作用是什么？它能给项目带来什么作用？

Yarn使用确定性算法，在将文件放置到需要的位置之前构建整个依赖关系树。安装过程中重要信息存储到yarn.lock文件中，以便可以在安装依赖关系的每个系统之间共享！此文件包含有关已安装的每个依赖项的确切版本的信息以及代码的校验和以确保代码完全相同。
此文件会锁定你安装的每个依赖项的版本，这可以确保你不会意外获得不良依赖；
并且会避免由于开发人员意外更改或则更新版本，而导致糟糕的情况！
————————————————
