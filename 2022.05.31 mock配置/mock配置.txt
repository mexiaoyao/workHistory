1：# 使用mockjs产生随机数据
cnpm install mockjs --save-dev

2：在src里新建文件夹mock
	建index.js
如下代码
########
import Mock from "mockjs";

//当模拟数据分类比较多时，此处可以单独引入js文件
//例如import './localMock';
Mock.setup({
    timeout: "300-600"
});

Mock.mock("/miniweb/invitingCode/getInviteControl", {
    code: 10000,
    data: {
        'isInvitingCode|1': ['0', '1', '2']
    }
});
##############

localMock页面代码，对应上面的“import './localMock'”
##########
import Mock from "mockjs";
const Random = Mock.Random;

Mock.setup({
    timeout: "300-600"
});

//通用访问
Mock.mock("/api/ajax", {
    code: 10000,
});

// 账号管理
Mock.mock("/api/getAccount", {
    code: 10000,
    data: {
        ["totalCount"]: 21,
        [`list|10`]: [
            {
                // 属性 id 是一个自增数，起始值为 1，每次增 1
                "id|+1": "@guid",
                name: "@cname", //姓名
                phone: /^1[385][1-9]\d{8}/,//手机
                account: () =>{
                    return Random.first().toLocaleLowerCase();
                }, //账号
                bindUserName : '', //绑定人员名称
                'bingUserSex|1' : [0, 1, 2],//绑定人员性别
                'roleId|1' : [1, 2, 3], //角色Id
                'domainId|1' : [1, 2, 3], //分管范围
            }
        ]
    }
});

常用的mock占位

占用符 解释

@cname 中文人名

@id 身份证id

@title 中文title

@city 中文城市

@ip ip 地址

@email email

@url url地址

@csentence(1,5) 生成1到5个字的中文句子

@cparagraph 生成中文段落

@string(11) 输出11 个字符长度的字符串

@float(0,10) 0 到 10 的浮点数

@integer(60,70) 60 到 70 之间的整数

@boolean boolean 类型 true,false

##################
占用符 解释

@cname 中文人名

@id 身份证id

@title 中文title

@city 中文城市

@ip ip 地址

@email email

@url url地址

@csentence(1,5) 生成1到5个字的中文句子

@cparagraph 生成中文段落

@string(11) 输出11 个字符长度的字符串

@float(0,10) 0 到 10 的浮点数

@integer(60,70) 60 到 70 之间的整数

@boolean boolean 类型 true,false

{
  "base": {
    "range": "@range(3, 7)",// [3,4,5,6]
    "string": "@string(7, 20)", //输出7-20个字符长度的字符串
    "character": "@character('abcde')",//随机从abcde中选一个字母
    "float": "@float(60, 100)",//60 到 100 的浮点数
    "integer": "@integer(60, 100)",//60 到 100 的整数
    "natural": "@natural(60, 100)",//60 到 100 的自然数
    "boolean": "@boolean" //boolean 类型 true,false
  },
  <!--时间类型-->
  "date": {
    "date": "@date",//1982-07-20
    "time": "@time",// 11:21:39
    "datetime": "@datetime",// 1972-12-16 02:04:24
    "now": "@now" //当前时间 2018-07-17 18:19:29
  },
  <!--图片-->
  "image": {
    "image": "@image('200x100', '#50B347', '#FFF', 'EasyMock')" // https://dummyimage.com/200x100/50B347/FFF&text=EasyMock 尺寸 背景 文字颜色 提示信息
  },
  <!--颜色系列-->
  "color": {
    "color": "@color", //16进制颜色值#79e0f2
    "hex": "@hex", // #f2e179
    "rgb": "@rgb", //rgb(189, 121, 242)
    "rgba": "@rgba",//rgba(189, 121, 242, .7)
    "hsl": "@hsl" //hsl(136, 82, 71)
  },
  <!--文案类-->
  "text": {
    "paragraph": "@paragraph(1, 3)",// 随机段落
    "sentence": "@sentence(3, 5)",// 随机句子
    "word": "@word(3, 5)",// 随机3-5个字母
    "title": "@title(3, 5)",// 随机3-5个单词的title
    "cparagraph": "@cparagraph(1, 3)",
    "csentence": "@csentence(3, 5)",
    "cword": "@cword('零一二三四五六七八九十', 5, 7)",
    "ctitle": "@ctitle(3, 5)"
  },
  <!--姓名-->
  "name": {
    "first": "@first",//姓
    "last": "@last",//名
    "name": "@name",//姓名
    "cfirst": "@cfirst",
    "clast": "@clast",
    "cname": "@cname"
  },
  <!--网站-->
  "web": {
    "url": "@url",//url地址
    "domain": "@domain",//域名
    "protocol": "@protocol",//协议
    "tld": "@tld",
    "email": "@email",//邮箱
    "ip": "@ip"//ip地址
  },
  <!--地址-->
  "address": {
    "region": "@region",//区域
    "province": "@province",//省
    "city": "@city(true)",//市
    "county": "@county(true)",//区 带true则携带上级
    "zip": "@zip"
  },
  "helper": {
    "capitalize": "@capitalize('hello')",
    "upper": "@upper('hello')",//全大写单词
    "lower": "@lower('HELLO')",//全小写单词
    "pick": "@pick(['a', 'e', 'i', 'o', 'u'])", //随机选择一个字母
    "shuffle": "@shuffle(['a', 'e', 'i', 'o', 'u'])" //打乱数组顺序
  },
  "miscellaneous": {
    "id": "@id",//身份证id
    "guid": "@guid",//生成32位的随机id
    "increment": "@increment(1)"//自增数，阶度为1
  }
}

########
以下是
import 'babel-polyfill';
import Vue from 'vue';
import App from './App.vue';
import router from './router';
import store from './store';
import './plugins/ant-design-vue.js';
import i18n from './locales';
import { notification } from 'ant-design-vue';
import './assets/less/main.less';

console.log(`前端版本号：${process.env.currentVersion || require('../package.json').version}`)
//此处是根据环境是否引用mock
process.env.NODE_ENV === "development" ? require("@/mock") : '';

// 路由权限
import './permission';
import { getStatusLocalesKey } from '@/data/statusData';
Vue.config.productionTip = false;
notification.config({
    duration: 2
});
//状态值国际化
Vue.prototype.$s = getStatusLocalesKey;
new Vue({
    store,
    router,
    i18n,
    render: h => h(App)
}).$mount('#app');

##############################
有案例项目
https://192.168.6.160/linkdood/linkdood-standard/java/web/linkdood-web-mobile/linkdood-mobile-admin.git


#####
mock中的url和axios的url一致